import{S as a,i as s,s as n,E as t,c as e,b as o,m as p,F as c,t as l,l as r,n as i,G as u,e as h,o as m,f as k,g as d,h as f,p as g,j as $,k as y,q as v,u as E}from"./client.ba230517.js";import{M as b}from"./MDXLayout.aa0fcd4f.js";import"./Meta.c9337a1c.js";import{C as w}from"./CodeBlock.e87a4089.js";function x(a){let s,n;return{c(){s=h("pre"),n=h("code"),this.h()},l(a){s=k(a,"PRE",{class:!0});var t=d(s);n=k(t,"CODE",{class:!0}),d(n).forEach(f),t.forEach(f),this.h()},h(){$(n,"class","language-html"),$(s,"class","language-html")},m(a,t){y(a,s,t),v(s,n),n.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> MaterialApp <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'svelte-materialify\'</span><span class="token punctuation">;</span>\n  <span class="token keyword">let</span> theme <span class="token operator">=</span> <span class="token string">\'light\'</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>MaterialApp</span> <span class="token attr-name">theme</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span>{theme}</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>slot</span> <span class="token punctuation">/></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>MaterialApp</span><span class="token punctuation">></span></span>'},p:E,d(a){a&&f(s)}}}function S(a){let s,n;return{c(){s=h("pre"),n=h("code"),this.h()},l(a){s=k(a,"PRE",{class:!0});var t=d(s);n=k(t,"CODE",{class:!0}),d(n).forEach(f),t.forEach(f),this.h()},h(){$(n,"class","language-scss"),$(s,"class","language-scss")},m(a,t){y(a,s,t),v(s,n),n.innerHTML='<span class="token property"><span class="token variable">$body-font-family</span></span><span class="token punctuation">:</span> <span class="token string">"Poppins"</span><span class="token punctuation">,</span> <span class="token string">"Segoe UI"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>\n\n<span class="token property"><span class="token variable">$spacer</span></span><span class="token punctuation">:</span> 6px <span class="token statement keyword">!default</span><span class="token punctuation">;</span>\n...'},p:E,d(a){a&&f(s)}}}function T(a){let s,n;return{c(){s=h("pre"),n=h("code"),this.h()},l(a){s=k(a,"PRE",{class:!0});var t=d(s);n=k(t,"CODE",{class:!0}),d(n).forEach(f),t.forEach(f),this.h()},h(){$(n,"class","language-scss"),$(s,"class","language-scss")},m(a,t){y(a,s,t),v(s,n),n.innerHTML='<span class="token keyword">@import</span> <span class="token string">"svelte-materialify/src/styles/variables"</span><span class="token punctuation">;</span>'},p:E,d(a){a&&f(s)}}}function C(a){let s,n;return{c(){s=h("pre"),n=h("code"),this.h()},l(a){s=k(a,"PRE",{class:!0});var t=d(s);n=k(t,"CODE",{class:!0}),d(n).forEach(f),t.forEach(f),this.h()},h(){$(n,"class","language-html"),$(s,"class","language-html")},m(a,t){y(a,s,t),v(s,n),n.innerHTML='<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">></span></span><span class="token script"><span class="token language-javascript">\n  <span class="token keyword">import</span> <span class="token operator">*</span> <span class="token keyword">as</span> <span class="token constant">S</span> <span class="token keyword">from</span> <span class="token string">\'svelte-materialify\'</span><span class="token punctuation">;</span>\n\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'svelte-materialify\'</span><span class="token punctuation">;</span>\n  <span class="token comment">// OR import from source</span>\n  <span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'svelte-materialify/src\'</span><span class="token punctuation">;</span>\n  <span class="token comment">// OR directly import the button component</span>\n  <span class="token keyword">import</span> Button <span class="token keyword">from</span> <span class="token string">\'svelte-materialify/src/components/Button/index.js\'</span><span class="token punctuation">;</span>\n</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>S.Button</span><span class="token punctuation">></span></span>These Are<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>S.Button</span><span class="token punctuation">></span></span>\n\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Button</span><span class="token punctuation">></span></span>The Same Thing<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Button</span><span class="token punctuation">></span></span>'},p:E,d(a){a&&f(s)}}}function M(a){let s,n,t,c,u,E,b,M,O,A,j,I,P,B,H,L,R,D,N,U,q,G,J,W,_,F,X,z,K,Q,V,Y,Z,aa,sa,na,ta,ea,oa,pa,ca;return D=new w({props:{lang:"html",$$slots:{default:[x]},$$scope:{ctx:a}}}),K=new w({props:{lang:"scss",$$slots:{default:[S]},$$scope:{ctx:a}}}),Y=new w({props:{lang:"scss",$$slots:{default:[T]},$$scope:{ctx:a}}}),pa=new w({props:{lang:"html",$$slots:{default:[C]},$$scope:{ctx:a}}}),{c(){s=h("section"),n=h("h1"),t=h("a"),c=h("i"),u=m("Usage"),E=h("p"),b=m("Once you have installed Svelte Materialify and other dependencies, it is time to learn how to use it."),M=h("section"),O=h("h2"),A=h("a"),j=h("i"),I=m("Layout"),P=h("p"),B=m("All components should be children of "),H=h("code"),L=m("MaterialApp"),R=m(" which has all the global styles and\nenables theming."),e(D.$$.fragment),N=h("section"),U=h("h2"),q=h("a"),G=h("i"),J=m("Theming"),W=h("p"),_=m("What to customise some SCSS variables, worry not, just put them in the "),F=h("strong"),X=m("_material-theme.scss"),z=m(" you had created."),e(K.$$.fragment),Q=h("p"),V=m("To access these variables in your own components just import the variable file from svelte materialify."),e(Y.$$.fragment),Z=h("section"),aa=h("h2"),sa=h("a"),na=h("i"),ta=m("Components"),ea=h("p"),oa=m("Just import them one by one or all at once from svelte materialify."),e(pa.$$.fragment),this.h()},l(a){s=k(a,"SECTION",{});var e=d(s);n=k(e,"H1",{class:!0,id:!0});var p=d(n);t=k(p,"A",{href:!0,"aria-hidden":!0,tabindex:!0});var l=d(t);c=k(l,"I",{class:!0}),d(c).forEach(f),l.forEach(f),u=g(p,"Usage"),p.forEach(f),E=k(e,"P",{});var r=d(E);b=g(r,"Once you have installed Svelte Materialify and other dependencies, it is time to learn how to use it."),r.forEach(f),M=k(e,"SECTION",{});var i=d(M);O=k(i,"H2",{class:!0,id:!0});var h=d(O);A=k(h,"A",{href:!0,"aria-hidden":!0,tabindex:!0});var m=d(A);j=k(m,"I",{class:!0}),d(j).forEach(f),m.forEach(f),I=g(h,"Layout"),h.forEach(f),P=k(i,"P",{});var $=d(P);B=g($,"All components should be children of "),H=k($,"CODE",{});var y=d(H);L=g(y,"MaterialApp"),y.forEach(f),R=g($," which has all the global styles and\nenables theming."),$.forEach(f),o(D.$$.fragment,i),i.forEach(f),N=k(e,"SECTION",{});var v=d(N);U=k(v,"H2",{class:!0,id:!0});var w=d(U);q=k(w,"A",{href:!0,"aria-hidden":!0,tabindex:!0});var x=d(q);G=k(x,"I",{class:!0}),d(G).forEach(f),x.forEach(f),J=g(w,"Theming"),w.forEach(f),W=k(v,"P",{});var S=d(W);_=g(S,"What to customise some SCSS variables, worry not, just put them in the "),F=k(S,"STRONG",{});var T=d(F);X=g(T,"_material-theme.scss"),T.forEach(f),z=g(S," you had created."),S.forEach(f),o(K.$$.fragment,v),Q=k(v,"P",{});var C=d(Q);V=g(C,"To access these variables in your own components just import the variable file from svelte materialify."),C.forEach(f),o(Y.$$.fragment,v),v.forEach(f),Z=k(e,"SECTION",{});var ca=d(Z);aa=k(ca,"H2",{class:!0,id:!0});var la=d(aa);sa=k(la,"A",{href:!0,"aria-hidden":!0,tabindex:!0});var ra=d(sa);na=k(ra,"I",{class:!0}),d(na).forEach(f),ra.forEach(f),ta=g(la,"Components"),la.forEach(f),ea=k(ca,"P",{});var ia=d(ea);oa=g(ia,"Just import them one by one or all at once from svelte materialify."),ia.forEach(f),o(pa.$$.fragment,ca),ca.forEach(f),e.forEach(f),this.h()},h(){$(c,"class","mdi mdi-pound"),$(t,"href","#usage"),$(t,"aria-hidden","true"),$(t,"tabindex","-1"),$(n,"class","heading text-h3 mb-4"),$(n,"id","usage"),$(j,"class","mdi mdi-pound"),$(A,"href","#layout"),$(A,"aria-hidden","true"),$(A,"tabindex","-1"),$(O,"class","heading text-h4 mb-3"),$(O,"id","layout"),$(G,"class","mdi mdi-pound"),$(q,"href","#theming"),$(q,"aria-hidden","true"),$(q,"tabindex","-1"),$(U,"class","heading text-h4 mb-3"),$(U,"id","theming"),$(na,"class","mdi mdi-pound"),$(sa,"href","#components"),$(sa,"aria-hidden","true"),$(sa,"tabindex","-1"),$(aa,"class","heading text-h4 mb-3"),$(aa,"id","components")},m(a,e){y(a,s,e),v(s,n),v(n,t),v(t,c),v(n,u),v(s,E),v(E,b),v(s,M),v(M,O),v(O,A),v(A,j),v(O,I),v(M,P),v(P,B),v(P,H),v(H,L),v(P,R),p(D,M,null),v(s,N),v(N,U),v(U,q),v(q,G),v(U,J),v(N,W),v(W,_),v(W,F),v(F,X),v(W,z),p(K,N,null),v(N,Q),v(Q,V),p(Y,N,null),v(s,Z),v(Z,aa),v(aa,sa),v(sa,na),v(aa,ta),v(Z,ea),v(ea,oa),p(pa,Z,null),ca=!0},p(a,s){const n={};1&s&&(n.$$scope={dirty:s,ctx:a}),D.$set(n);const t={};1&s&&(t.$$scope={dirty:s,ctx:a}),K.$set(t);const e={};1&s&&(e.$$scope={dirty:s,ctx:a}),Y.$set(e);const o={};1&s&&(o.$$scope={dirty:s,ctx:a}),pa.$set(o)},i(a){ca||(l(D.$$.fragment,a),l(K.$$.fragment,a),l(Y.$$.fragment,a),l(pa.$$.fragment,a),ca=!0)},o(a){r(D.$$.fragment,a),r(K.$$.fragment,a),r(Y.$$.fragment,a),r(pa.$$.fragment,a),ca=!1},d(a){a&&f(s),i(D),i(K),i(Y),i(pa)}}}function O(a){let s,n;const h=[A];let m={$$slots:{default:[M]},$$scope:{ctx:a}};for(let a=0;a<h.length;a+=1)m=t(m,h[a]);return s=new b({props:m}),{c(){e(s.$$.fragment)},l(a){o(s.$$.fragment,a)},m(a,t){p(s,a,t),n=!0},p(a,[n]){const t=0&n?c(h,[u(A)]):{};1&n&&(t.$$scope={dirty:n,ctx:a}),s.$set(t)},i(a){n||(l(s.$$.fragment,a),n=!0)},o(a){r(s.$$.fragment,a),n=!1},d(a){i(s,a)}}}const A={title:"Usage",related:[{Installation:"/getting-started/installation/"},{App:"/components/material-app/"}]};export default class extends a{constructor(a){super(),s(this,a,null,O,n,{})}}export{A as metadata};
